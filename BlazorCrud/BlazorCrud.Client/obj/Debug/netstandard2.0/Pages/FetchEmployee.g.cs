#pragma checksum "c:\users\ankit\source\repos\BlazorCrud\BlazorCrud\BlazorCrud.Client\Pages\FetchEmployee.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2ca522842a04fe5930baefdae4bea40cc4d2abe9"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorCrud.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using BlazorCrud.Client;
    using BlazorCrud.Client.Shared;
    using BlazorCrud.Shared.Models;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/fetchemployee")]
    public class FetchEmployee : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.AddContent(0, "\n");
            builder.OpenElement(1, "h1");
            builder.AddContent(2, "Employee Data");
            builder.CloseElement();
            builder.AddContent(3, "\n\n");
            builder.OpenElement(4, "p");
            builder.AddContent(5, "This component demonstrates fetching Employee data from the server.");
            builder.CloseElement();
            builder.AddContent(6, "\n\n");
            builder.OpenElement(7, "p");
            builder.AddContent(8, "\n    ");
            builder.OpenElement(9, "a");
            builder.AddAttribute(10, "href", "/addemployee");
            builder.AddContent(11, "Create New");
            builder.CloseElement();
            builder.AddContent(12, "\n");
            builder.CloseElement();
            builder.AddContent(13, "\n\n");
            if (empList == null)
{
            builder.AddContent(14, "    ");
            builder.OpenElement(15, "p");
            builder.OpenElement(16, "em");
            builder.AddContent(17, "Loading...");
            builder.CloseElement();
            builder.CloseElement();
            builder.AddContent(18, "\n");
            }
else
{
            builder.AddContent(19, "    ");
            builder.OpenElement(20, "table");
            builder.AddAttribute(21, "class", "table");
            builder.AddContent(22, "\n        ");
            builder.OpenElement(23, "thead");
            builder.AddContent(24, "\n            ");
            builder.OpenElement(25, "tr");
            builder.AddContent(26, "\n                ");
            builder.OpenElement(27, "th");
            builder.AddContent(28, "ID");
            builder.CloseElement();
            builder.AddContent(29, "\n                ");
            builder.OpenElement(30, "th");
            builder.AddContent(31, "Name");
            builder.CloseElement();
            builder.AddContent(32, "\n                ");
            builder.OpenElement(33, "th");
            builder.AddContent(34, "Gender");
            builder.CloseElement();
            builder.AddContent(35, "\n                ");
            builder.OpenElement(36, "th");
            builder.AddContent(37, "Department");
            builder.CloseElement();
            builder.AddContent(38, "\n                ");
            builder.OpenElement(39, "th");
            builder.AddContent(40, "City");
            builder.CloseElement();
            builder.AddContent(41, "\n            ");
            builder.CloseElement();
            builder.AddContent(42, "\n        ");
            builder.CloseElement();
            builder.AddContent(43, "\n        ");
            builder.OpenElement(44, "tbody");
            builder.AddContent(45, "\n");
            foreach (var emp in empList)
            {
            builder.AddContent(46, "                ");
            builder.OpenElement(47, "tr");
            builder.AddContent(48, "\n                    ");
            builder.OpenElement(49, "td");
            builder.AddContent(50, emp.EmployeeId);
            builder.CloseElement();
            builder.AddContent(51, "\n                    ");
            builder.OpenElement(52, "td");
            builder.AddContent(53, emp.Name);
            builder.CloseElement();
            builder.AddContent(54, "\n                    ");
            builder.OpenElement(55, "td");
            builder.AddContent(56, emp.Gender);
            builder.CloseElement();
            builder.AddContent(57, "\n                    ");
            builder.OpenElement(58, "td");
            builder.AddContent(59, emp.Department);
            builder.CloseElement();
            builder.AddContent(60, "\n                    ");
            builder.OpenElement(61, "td");
            builder.AddContent(62, emp.City);
            builder.CloseElement();
            builder.AddContent(63, "\n                    ");
            builder.OpenElement(64, "td");
            builder.AddContent(65, "\n                        ");
            builder.OpenElement(66, "a");
            builder.AddAttribute(67, "href", "/editemployee/" + emp.EmployeeId);
            builder.AddContent(68, "Edit");
            builder.CloseElement();
            builder.AddContent(69, "  |\n                        ");
            builder.OpenElement(70, "a");
            builder.AddAttribute(71, "href", "/delete/" + emp.EmployeeId);
            builder.AddContent(72, "Delete");
            builder.CloseElement();
            builder.AddContent(73, "\n                    ");
            builder.CloseElement();
            builder.AddContent(74, "\n                ");
            builder.CloseElement();
            builder.AddContent(75, "\n");
                        }
            builder.AddContent(76, "        ");
            builder.CloseElement();
            builder.AddContent(77, "\n    ");
            builder.CloseElement();
            builder.AddContent(78, "\n");
            }
            builder.AddContent(79, "\n");
        }
        #pragma warning restore 1998
        
Employee[] empList;

protected override async Task OnInitAsync()
{
    empList = await Http.GetJsonAsync<Employee[]>
    ("/api/Employee/Index");
}

        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
